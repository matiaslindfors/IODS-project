dim(data_mat)
str(data_por)
dim(data_por)
dim(data_mat)
View(data_mat)
dim(data_por)
str(data_mat)
str(data_por)
summary(data_mat)
str(data_por)
library(dplyr)
?join_by
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(.data_mat, .data_por))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
data_mat <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-mat.csv", sep=";", header=TRUE)
data_por <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-por.csv", sep=";", header=TRUE)
dim(data_mat)
#33 variables and 395 observations
dim(data_por)
#33 variables and 649 observations
str(data_mat)
str(data_por)
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
?inner_join
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages("dbplyr")
library(dbplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
rlang::last_error()
summary(rlang::last_error())
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages(MASS)
library(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
data(Boston)
str(Boston)
summary(Bosotn)
summary(Boston)
str(Boston)
dim(Boston)
str(Boston)
summary(Boston)
plot(summary(Boston))
pairs(Boston)
corrplot(Boston)
install.packages("corrplot")
library(corrplot)
corrplot(Boston)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="square")
summary(Boston)
corrplot(cor_matrix, method="circle", type="upper")
summary(Boston)
View(Boston)
summary(Boston)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
corrplot(cor_matrix, method="circle", type="upper")
Boston_scaled <- scale(Boston)
View(Boston_scaled)
summary(Boston_scaled)
clas(Boston_scaled)
class(Boston_scaled)
Boston_scaled
Boston_scaled <- as.data.frame(Boston_scaled)
class(Boston_scaled)
summary(Boston_scaled$crim)
quantile(Boston_scaled$crim)
bins <- quantile(Boston_scaled$crim)
bins
View(Boston)
crime <- cut(Boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
summary(crime)
crime
Boston_scaled <- dplyr::select(Boston_scaled, -crim)
dim(Boston_scaled)
Boston_scaled <- data.frame(Boston_scaled, crime)
dim(Boston_scaled)
str(Boston_scaled)
nrow(Boston_scaled)
nrow(Boston_scaled)
n <- nrow(Boston_scaled)
ind <- sample(n, size = n*0.8)
train <- Boston_scaled[ind, ]
test <- Boston_scaled[-ind, ]
lda.fit <- lda(crime ~ ., data = Boston_scaled)
lda.fit
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.fit <- lda(crime ~ ., data = train)
?lda
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
correct_classes
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
table(correct = correct_classes, predicted = lda.pred$class)
install.packages("MASS")
library(MASS)
data(Boston)
library(MASS)
data(Boston)
data(Boston)
library(MASS)
data(Boston)
Boston2 <- Boston
library(MASS)
data(Boston)
str(Boston)
dim(Boston)
summary(Boston)
library(corrplot)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
Boston_scaled <- scale(Boston)
summary(Boston_scaled)
Boston_scaled <- as.data.frame(Boston_scaled)
summary(Boston_scaled$crim)
bins <- quantile(Boston_scaled$crim)
crime <- cut(Boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
Boston_scaled <- dplyr::select(Boston_scaled, -crim)
dim(Boston_scaled)
Boston_scaled <- data.frame(Boston_scaled, crime)
dim(Boston_scaled)
str(Boston_scaled)
nrow(Boston_scaled)
n <- nrow(Boston_scaled)
ind <- sample(n, size = n*0.8)
train <- Boston_scaled[ind, ]
test <- Boston_scaled[-ind, ]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data(Boston)
Boston2 <- Boston
Boston2_scaled <- scale(Boston2)
dist_eu <- dist(Boston2_scaled)
dist_eu
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
dist_man <- dist(Boston2_scaled, method = "Manhattan")
dist_man <- dist(Boston2_scaled, method = "manhattan")
summary(dist_man)
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
summary(dist_eu)
km <- kmeans(Boston2_scaled, centers = 4)
pairs(Boston2_scaled, col = km$cluster)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot-withinss})
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = "line")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(x = 1:k_max, y = twcss, geom = "line")
km <- kmeans(Boston2_scaled, centers = 2)
pairs(Boston2_scaled, col = km$cluster)
?pairs
?pairs
library(MASS)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
km3 <- kmeans(Boston3_scaled, centers = 4)
km3
lda.fit3 <- lda(km3, data = Boston3_scaled)
Boston3_scaled <- as.matrix(Boston3_scaled)
lda.fit3 <- lda(km3, data = Boston3_scaled)
lda.fit3 <- lda(km3 ~., data = Boston3_scaled)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
class(Boston3_scaled)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
Boston3_scaled <- data.frame(Boston3_scaled)
class(Boston3_scaled)
km3 <- kmeans(Boston3_scaled, centers = 4)
lda.fit3 <- lda(km3 ~., data = Boston3_scaled)
km3 <- kmeans(Boston3_scaled, centers = 4)
km3
lda.fit3 <- lda(km3$cluster ~., data = Boston3_scaled)
lda.fit3 <- lda(km3$cluster ~., data = Boston3_scaled)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit3, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit3, myscale = 1)
View(Boston)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
dim(hd)
str(hd
str(hd)
str(hd)
hd$Country
str(hd)
dim(gii)
str(gii)
gii$Country
str(gii)
summary(hd)
summary(gii)
colnames(hd)
View(hd)
colnames(hd) <- c("HDI_rank", "country", "HDI", "exp_life", "exp_educ", "educ", "GNIpc", "GNIHDI_rank")
View(hd)
View(hd)
View(gii)
View(gii)
colnames(gii)
gii$Percent.Representation.in.Parliament
colnames(gii)
colnames(gii) <- c("GII_rank", "country", "GII", "mortality_maternal", "birth_adolescent", "female_parliament", "female_secondary", "male_secondary", "female_work", "male_work")
gii
colnames(hd) <- c("HDI_rank", "country", "HDI", "exp_life", "exp_educ", "educ", "GNIpc", "GNIHDI_rank")
colnames(gii) <- c("GII_rank", "country", "GII", "mortality_maternal", "birth_adolescent", "female_parliament", "female_secondary", "male_secondary", "female_work", "male_work")
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
library(dplyr)
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
View(gii)
gii <- mutate(gii, sex_secondary = (female_work/male_work))
join_by <- "country"
hd_gii <- inner_join(hd, gii, by = join_by)
colnames(hd_gii)
View(hd_gii)
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
gii <- mutate(gii, sex_work = (female_work/male_work))
join_by <- "country"
hd_gii <- inner_join(hd, gii, by = join_by)
colnames(hd_gii)
dim(hd_gii)
human <- hd_gii
write.table(human, file = "human")
human
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
dim(hd)
str(hd)
dim(gii)
str(gii)
summary(hd)
summary(gii)
colnames(hd) <- c("HDI_rank", "country", "HDI", "exp_life", "exp_educ", "educ", "GNIpc", "GNIHDI_rank")
colnames(gii) <- c("GII_rank", "country", "GII", "mortality_maternal", "birth_adolescent", "female_parliament", "female_secondary", "male_secondary", "female_work", "male_work")
library(dplyr)
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
gii <- mutate(gii, sex_work = (female_work/male_work))
join_by <- "country"
hd_gii <- inner_join(hd, gii, by = join_by)
dim(hd_gii)
human <- hd_gii
write.table(human, file = "human")
human
dim(human)
str(human)
?mutate
View(human)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
library(stringr)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
human$GNIpc <- as.numeric(human$GNIpc)
keep <- c("country", "sex_secondary", "sex_work", "exp_educ", "exp_life", "GNIpc", "mortality_maternal", "birth_adolescent", "female_parliament")
human <- select(human, one_of(keep))
complete.cases(human)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
str(human$GNIpc)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
colnames(hd) <- c("HDI_rank", "country", "HDI", "exp_life", "exp_educ", "educ", "GNIpc", "GNIHDI_rank")
colnames(gii) <- c("GII_rank", "country", "GII", "mortality_maternal", "birth_adolescent", "female_parliament", "female_secondary", "male_secondary", "female_work", "male_work")
library(dplyr)
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
gii <- mutate(gii, sex_work = (female_work/male_work))
join_by <- "country"
hd_gii <- inner_join(hd, gii, by = join_by)
dim(hd_gii)
human <- hd_gii
write.table(human, file = "human")
install.packages("stringr")
install.packages("stringr")
library(stringr)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
keep <- c("country", "sex_secondary", "sex_work", "exp_educ", "exp_life", "GNIpc", "mortality_maternal", "birth_adolescent", "female_parliament")
human <- select(human, one_of(keep))
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
View(human_)
tail(human_, 10)
last <- nrow(human_) - 7
human_ <- human_[1:last, ]
rownames(human-) <- human-$country
rownames(human_) <- human_$country
human_ <- select(human, -country)
#Matias Lindfors, weeks 4 & 5; data wrangling
#WEEK 4 (Week 5 can be found below):
# 1) File created
# 2) Reading data into R:
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# 3) Exploring the datasets:
dim(hd)
str(hd)
#The hd-dataset contains data on 194 countries, including details on their respective human development indexes, expected years of education, gross national income etc. Altogether 195 obs. across 8 variables.
dim(gii)
str(gii)
#The gii-dataset contains data on 194 countries, including details on their respective gender inequality indexes, maternal mortality ratios, female representation in parliament etc. Altogether 195 obs. across 10 variables.
#Let's create summaries of the variables included in the above-mentioned datasets:
summary(hd)
summary(gii)
# 4) Renaming variables
colnames(hd) <- c("HDI_rank", "country", "HDI", "exp_life", "exp_educ", "educ", "GNIpc", "GNIHDI_rank")
colnames(gii) <- c("GII_rank", "country", "GII", "mortality_maternal", "birth_adolescent", "female_parliament", "female_secondary", "male_secondary", "female_work", "male_work")
# 5) Creating new variables:
library(dplyr)
gii <- mutate(gii, sex_secondary = (female_secondary/male_secondary))
gii <- mutate(gii, sex_work = (female_work/male_work))
# 6) Joining the two datasets:
join_by <- "country"
hd_gii <- inner_join(hd, gii, by = join_by)
dim(hd_gii)
#We now have 195 obs. across 19 variables, as we should have.
#Let's rename the data and save it to a specified folder:
human <- hd_gii
write.table(human, file = "human")
#THE END OF WEEK 4.
#WEEK 5:
#At the moment, we have a dataset called "human" that was created last week. Let's explore its dimensions and structure:
dim(human)
str(human)
#So 195 observations accross 19 variables, as expected. The dataset includes data on health and educational aspects as well as data on female empowerment.
#Let's transform GNI to a numeric variable:
install.packages("stringr")
library(stringr)
str_replace(human$GNIpc, pattern=",", replace ="") %>% as.numeric
#Excluding unneeded variables:
keep <- c("country", "sex_secondary", "sex_work", "exp_educ", "exp_life", "GNIpc", "mortality_maternal", "birth_adolescent", "female_parliament")
human <- select(human, one_of(keep))
#Removing missing values:
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
#Removing observations related to regions instead of countries:
tail(human_, 10)
last <- nrow(human_) - 7
human_ <- human_[1:last, ]
#Adding countries as row names:
rownames(human_) <- human_$country
install.packages("stringr")
human_ <- select(human_, -country)
human_ <- dplyr::select(human_, -country)
human <- human_
write.table(human, file = "human")
human_url <- read.table("https://github.com/matiaslindfors/IODS-project/blob/master/data/MLcreate_learning2014.R", header = TRUE, sep = ",")
human_url <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = TRUE, sep = ",")
summary(human_url)
View(human_url)
install.packages("corrplot")
cor_matrix <- cor(human_url)
corrplot(cor_matrix, method="circle", type="upper")
install.packages("corrplot")
library(corrplot)
cor_matrix <- cor(human_url)
corrplot(cor_matrix, method="circle", type="upper")
![corrplot]("C:\Users\matia\Desktop\GitHub\IODS-project\corrplot.png")
include_graphics("C:\Users\matia\Desktop\GitHub\IODS-project\corrplot.png")
include_graphics("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\corrplot.png")
install.packeges("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
include_graphics("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\corrplot.png")
prcomp(human)
prcomp(human)
prcomp(human_url)
pca_human_url <- prcomp(human_url)
biplot(pca_human_url, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca_human_url <- prcomp(human_url)
pca_human_url
biplot(pca_human_url, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
human_url_scaled <- scale(human_url)
human_url_s <- scale(human_url)
human_url_s <- scale(human_url)
pca_human_url_s <- prcomp(human_url_s)
pca_human_url_s
biplot(pca_human_url_s, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca_human_url <- prcomp(human_url)
pca_human_url
human_url_s <- scale(human_url)
pca_human_url_s <- prcomp(human_url_s)
pca_human_url_s
biplot(pca_human_url_s, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca1 <- biplot(pca_human_url, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca2 <- biplot(pca_human_url_s, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
pca1
biplot(pca_human_url_s, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
install.packages("Factominer")
library(Factominer)
install.packages("FactoMineR")
library(FactoMineR)
data(tea)
View(tea)
dim(tea)
str(tea)
summary(tea)
cor_matrix <- cor(tea)
corrplot(cor_matrix, method="circle", type="upper")
install.packages("corrplot")
library(corrplot)
cor_matrix <- cor(tea)
corrplot(cor_matrix, method="circle", type="upper")
library(corrplot)
install.packages("corrplot")
library(corrplot)
cor_matrix <- cor(tea)
install.packages(dplyr)
install.packages(tidyr)
install.packages(ggplot2)
install.packages("dplyr")
install.packages("tidyr")
install.packages("ggplot2")
library(dplyr)
library(tidyr)
library(ggplot2)
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
View(tea)
gather(tea, -tea$age) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
gather(tea) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
tea_time <- select(tea, one_of(keep_columns))
gather(tea_time) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
mca <- MCA(tea_time, graph = TRUE)
mca <- MCA(tea_time, graph = FALSE)
mca <- MCA(tea_time, graph = FALSE)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
