students2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt")
students2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep = "\,", header=TRUE)
students2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep = ",", header=TRUE)
dim(students2014)
str(students2014)
dim(students2014)
library(ggplot2)
library(ggplot2)
library(ggplot2)
students2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt")
View(students2014)
View(students2014)
students2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep = ",", header = TRUE)
View(students2014)
str(students2014)
dim(students2014
dim(students2014)
dim(students2014)
library(ggplot2)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
summary(students$gender)
summary(students2014$gender)
summary(students2014$age)
summary(students2014$attitude)
summary(students2014$deep)
summary(students2014$stra)
summary(students2014$surf)
summary(students2014$points)
dim(students2014$age)
dim(students2014$age)
str(students2014$age)
summary(students2014$gender)
summary(students2014$age)
summary(students2014$attitude)
summary(students2014$deep)
summary(students2014$stra)
summary(students2014$surf)
summary(students2014$points)
p1 <- ggplot(students2014, aes(x=attitude, y=points, col=gender))
p2 <- p1 + geom_point()
p2
p3 <- p2 + geom_smooth(method="lm")(regression line)
p3 <- p2 + geom_smooth(method="lm")
p3
p1 <- ggplot(students2014, aes(x=attitude, y=points, col=gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method="lm")
p4 <- p3 + ggtitle("Students' attitude vs exam points")
p4
install.packages("GGally")
library(GGally)
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=0.3), lower = list(combo = wrap("facethist"), bins=20))
p
lm(formula = points ~ gender, age, attitude, data=students2014)
lm(formula = points ~ gender + age + attitude, data=students2014)
model <- lm(formula = points ~ gender + age + attitude, data=students2014)
summary(model)
model2 <- lm(formula = points ~ attitude, data=students2014)
summary(model2)
par(mfrow=c(2,2))
plot(model2, which=c(1,2,5))
load("C:/Users/matia/Desktop/GitHub/IODS-project/data/student-mat.csv")
data_mat <- read.table()
source('C:/Users/matia/Desktop/GitHub/IODS-project/data/create_alc.R')
?read.table
data_mat <- read.csv(student-mat)
data_mat <- read.csv("C:\Users\matia\Desktop\GitHub\IODS-project\data\student-mat.csv", header=TRUE)
data_mat <- read.csv("C:\\Users\matia\Desktop\GitHub\IODS-project\data\student-mat.csv", header=TRUE)
data_mat <- read.csv("C:\\Users\\matia\Desktop\GitHub\IODS-project\data\student-mat.csv", header=TRUE)
data_mat <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-mat.csv", header=TRUE)
data_por <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-por.csv", header=TRUE)
data_por
data_mat <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-mat.csv", sep=";", header=TRUE)
data_mat
data_por <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-por.csv", sep=";", header=TRUE)
data_mat <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-mat.csv", sep=";", header=TRUE)
data_por <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-por.csv", sep=";", header=TRUE)
View(data_mat)
View(data_mat)
View(data_mat)
str(data_mat)
structure(data_mat)
str(data_mat)
dim(data_mat)
str(data_por)
dim(data_por)
dim(data_mat)
View(data_mat)
dim(data_por)
str(data_mat)
str(data_por)
summary(data_mat)
str(data_por)
library(dplyr)
?join_by
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(.data_mat, .data_por))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
join_by
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
data_mat <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-mat.csv", sep=";", header=TRUE)
data_por <- read.csv("C:\\Users\\matia\\Desktop\\GitHub\\IODS-project\\data\\student-por.csv", sep=";", header=TRUE)
dim(data_mat)
#33 variables and 395 observations
dim(data_por)
#33 variables and 649 observations
str(data_mat)
str(data_por)
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
matpor <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
?inner_join
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages("dbplyr")
library(dbplyr)
join_by <- c("school", "sex", "age", "adress", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
rlang::last_error()
summary(rlang::last_error())
mat_por <- inner_join(data_mat, data_por, by = join_by, suffix = c(".data_mat", ".data_por"))
install.packages(MASS)
library(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
data(Boston)
str(Boston)
summary(Bosotn)
summary(Boston)
str(Boston)
dim(Boston)
str(Boston)
summary(Boston)
plot(summary(Boston))
pairs(Boston)
corrplot(Boston)
install.packages("corrplot")
library(corrplot)
corrplot(Boston)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="square")
summary(Boston)
corrplot(cor_matrix, method="circle", type="upper")
summary(Boston)
View(Boston)
summary(Boston)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
corrplot(cor_matrix, method="circle", type="upper")
Boston_scaled <- scale(Boston)
View(Boston_scaled)
summary(Boston_scaled)
clas(Boston_scaled)
class(Boston_scaled)
Boston_scaled
Boston_scaled <- as.data.frame(Boston_scaled)
class(Boston_scaled)
summary(Boston_scaled$crim)
quantile(Boston_scaled$crim)
bins <- quantile(Boston_scaled$crim)
bins
View(Boston)
crime <- cut(Boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
table(crime)
summary(crime)
crime
Boston_scaled <- dplyr::select(Boston_scaled, -crim)
dim(Boston_scaled)
Boston_scaled <- data.frame(Boston_scaled, crime)
dim(Boston_scaled)
str(Boston_scaled)
nrow(Boston_scaled)
nrow(Boston_scaled)
n <- nrow(Boston_scaled)
ind <- sample(n, size = n*0.8)
train <- Boston_scaled[ind, ]
test <- Boston_scaled[-ind, ]
lda.fit <- lda(crime ~ ., data = Boston_scaled)
lda.fit
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.fit <- lda(crime ~ ., data = train)
?lda
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
correct_classes
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
table(correct = correct_classes, predicted = lda.pred$class)
install.packages("MASS")
library(MASS)
data(Boston)
library(MASS)
data(Boston)
data(Boston)
library(MASS)
data(Boston)
Boston2 <- Boston
library(MASS)
data(Boston)
str(Boston)
dim(Boston)
summary(Boston)
library(corrplot)
cor_matrix <- cor(Boston)
corrplot(cor_matrix, method="circle", type="upper")
Boston_scaled <- scale(Boston)
summary(Boston_scaled)
Boston_scaled <- as.data.frame(Boston_scaled)
summary(Boston_scaled$crim)
bins <- quantile(Boston_scaled$crim)
crime <- cut(Boston_scaled$crim, breaks = bins, include.lowest = TRUE, labels = c("low", "med_low", "med_high", "high"))
Boston_scaled <- dplyr::select(Boston_scaled, -crim)
dim(Boston_scaled)
Boston_scaled <- data.frame(Boston_scaled, crime)
dim(Boston_scaled)
str(Boston_scaled)
nrow(Boston_scaled)
n <- nrow(Boston_scaled)
ind <- sample(n, size = n*0.8)
train <- Boston_scaled[ind, ]
test <- Boston_scaled[-ind, ]
lda.fit <- lda(crime ~ ., data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 1)
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
library(MASS)
data(Boston)
Boston2 <- Boston
Boston2_scaled <- scale(Boston2)
dist_eu <- dist(Boston2_scaled)
dist_eu
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
dist_man <- dist(Boston2_scaled, method = "Manhattan")
dist_man <- dist(Boston2_scaled, method = "manhattan")
summary(dist_man)
dist_eu <- dist(Boston2_scaled)
summary(dist_eu)
summary(dist_eu)
km <- kmeans(Boston2_scaled, centers = 4)
pairs(Boston2_scaled, col = km$cluster)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot-withinss})
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = "line")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(x = 1:k_max, y = twcss, geom = "line")
km <- kmeans(Boston2_scaled, centers = 2)
pairs(Boston2_scaled, col = km$cluster)
?pairs
?pairs
library(MASS)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
km3 <- kmeans(Boston3_scaled, centers = 4)
km3
lda.fit3 <- lda(km3, data = Boston3_scaled)
Boston3_scaled <- as.matrix(Boston3_scaled)
lda.fit3 <- lda(km3, data = Boston3_scaled)
lda.fit3 <- lda(km3 ~., data = Boston3_scaled)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
class(Boston3_scaled)
data(Boston)
Boston3 <- Boston
Boston3_scaled <- scale(Boston3)
Boston3_scaled <- data.frame(Boston3_scaled)
class(Boston3_scaled)
km3 <- kmeans(Boston3_scaled, centers = 4)
lda.fit3 <- lda(km3 ~., data = Boston3_scaled)
km3 <- kmeans(Boston3_scaled, centers = 4)
km3
lda.fit3 <- lda(km3$cluster ~., data = Boston3_scaled)
lda.fit3 <- lda(km3$cluster ~., data = Boston3_scaled)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "orange", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit3, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit3, myscale = 1)
View(Boston)
